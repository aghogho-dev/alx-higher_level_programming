===================
2-matrix_divided.py
===================

This module tests the ``matrix_divided`` function.

Usage
-----

    >>> import sys
    >>> sys.path.append('../')
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero


    >>> matrix_divided(tuple(matrix), 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(list(map(tuple, matrix)), 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_1 = [
    ...    [1, 2, 3, 4],
    ...    [5, 6, 7]
    ... ]
    >>> matrix_divided(matrix_1, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(matrix, '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix[0][0] = '1'
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
